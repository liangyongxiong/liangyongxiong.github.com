<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>我的博客</title><link href="/" rel="alternate"></link><link href="/feeds/all.atom.xml" rel="self"></link><id>/</id><updated>2013-11-06T10:30:00+08:00</updated><entry><title>使用 Pelican + Github 搭建静态博客</title><link href="/posts/1.html" rel="alternate"></link><updated>2013-11-06T10:30:00+08:00</updated><author><name>Michael</name></author><id>tag:,2013-11-06:posts/1.html</id><summary type="html">&lt;h3&gt;介绍 Pelican&lt;/h3&gt;
&lt;p&gt;Pelican&lt;code&gt;[ˈpɛlɪkən]&lt;/code&gt; 是法语 Calepin&lt;code&gt;[kalp ɛ̃]&lt;/code&gt;变形词（&lt;code&gt;anagram&lt;/code&gt;），Calepin 是笔记本、备忘录的意思。&lt;/p&gt;
&lt;p&gt;框架选型上，我有以下考虑，经历各种 Google + Baidu 后，最终确定了 Pelican + Github 的方案。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;WordPress&lt;/code&gt;或&lt;code&gt;Discuz!&lt;/code&gt;都基于 PHP 语言开发，Pythoner 略微抵触&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Django&lt;/code&gt;框架虽然功能完善，但需要配置和管理的相应的数据库等组件，过于重量级&lt;/li&gt;
&lt;li&gt;技术宅都喜欢免费的午餐，不希望支付&lt;code&gt;VPS&lt;/code&gt;服务器的月租费用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;初始化 Pelican 项目&lt;/h3&gt;
&lt;p&gt;在 Python + Pip + Ubuntu 环境下，直接通过&lt;code&gt;pip install&lt;/code&gt;命令，即可安装 Pelican&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo pip install pelican    # 安装 Pelican 框架
sudo pip install markdown   # 安装 MarkDown 组件
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;创建博客文件夹，并执行初始化命令&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mkdir /path/to/your/blog
cd /path/to/your/blog
pelican-quickstart          # 生成 Pelican 项目文件框架
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;回答一系列问题过后，就能生成以下博客项目文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;/path/to/your/blog
  |-- content               # 全部文章放于此目录
  |-- output                # 静态文件放于此目录
  |-- pelicanconf.py        # 博客配置文件
  |-- publishconf.py        # 发布配置文件
  |-- Makefile              # 方便管理博客的 Makefile
  |-- develop_server.sh     # 用于开启测试服务器
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;编辑博客文章&lt;/h3&gt;
&lt;p&gt;在&lt;code&gt;content&lt;/code&gt;目录中新建一个&lt;code&gt;test.md&lt;/code&gt;文件，输入以下内容&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Title: Hello World
Date: 2015-01-11 10:30
Category: 分类1
Tags: 标签1,标签2

Hello World! 
这是我的第一篇文章
欢迎光临
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在博客项目文件夹中执行以下指令，生成全部静态页面文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
make html
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;本地开启一个测试服务器, 这会在本地&lt;code&gt;8000端口&lt;/code&gt;建立一个测试web服务器, 可以使用浏览器打开&lt;a href="http://localhost:8000/"&gt;&lt;code&gt;http://localhost:8000/&lt;/code&gt;&lt;/a&gt;来访问这个测试服务器, 然后就可以欣赏到你的博客了&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
./develop_server.sh start
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;提交到 Github&lt;/h3&gt;
&lt;p&gt;创建 Github 工程，工程名称必须为&lt;code&gt;username.github.com&lt;/code&gt;，其中&lt;code&gt;username&lt;/code&gt;是你在 Github 上注册的用户名，并将 Github 工程&lt;code&gt;clone&lt;/code&gt;到 Pelican 项目的&lt;code&gt;output&lt;/code&gt;文件夹中。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
git clone https://github.com/username/username.github.com.git ./output
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在&lt;code&gt;output&lt;/code&gt;目录中&lt;code&gt;commit&lt;/code&gt;全部文件到 Github&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd outout
git add --all
git commit -m &amp;#39;first commit&amp;#39;
git push
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;配置 Pelican 项目&lt;/h3&gt;
&lt;p&gt;Pelican 提供了一些主题和插件，用户可从 Github 克隆下来，然后根据需要自行选择&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
git clone git://github.com/getpelican/pelican-themes.git    # 主题
git clone git://github.com/getpelican/pelican-plugins.git   # 插件
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;</summary><category term="Python"></category><category term="Pelican"></category><category term="Github"></category></entry><entry><title>使用 Pelican + Github 搭建静态博客</title><link href="/posts/10.html" rel="alternate"></link><updated>2013-11-06T10:30:00+08:00</updated><author><name>Michael</name></author><id>tag:,2013-11-06:posts/10.html</id><summary type="html">&lt;h3&gt;介绍 Pelican&lt;/h3&gt;
&lt;p&gt;Pelican&lt;code&gt;[ˈpɛlɪkən]&lt;/code&gt; 是法语 Calepin&lt;code&gt;[kalp ɛ̃]&lt;/code&gt;变形词（&lt;code&gt;anagram&lt;/code&gt;），Calepin 是笔记本、备忘录的意思。&lt;/p&gt;
&lt;p&gt;框架选型上，我有以下考虑，经历各种 Google + Baidu 后，最终确定了 Pelican + Github 的方案。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;WordPress&lt;/code&gt;或&lt;code&gt;Discuz!&lt;/code&gt;都基于 PHP 语言开发，Pythoner 略微抵触&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Django&lt;/code&gt;框架虽然功能完善，但需要配置和管理的相应的数据库等组件，过于重量级&lt;/li&gt;
&lt;li&gt;技术宅都喜欢免费的午餐，不希望支付&lt;code&gt;VPS&lt;/code&gt;服务器的月租费用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;初始化 Pelican 项目&lt;/h3&gt;
&lt;p&gt;在 Python + Pip + Ubuntu 环境下，直接通过&lt;code&gt;pip install&lt;/code&gt;命令，即可安装 Pelican&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo pip install pelican    # 安装 Pelican 框架
sudo pip install markdown   # 安装 MarkDown 组件
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;创建博客文件夹，并执行初始化命令&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mkdir /path/to/your/blog
cd /path/to/your/blog
pelican-quickstart          # 生成 Pelican 项目文件框架
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;回答一系列问题过后，就能生成以下博客项目文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;/path/to/your/blog
  |-- content               # 全部文章放于此目录
  |-- output                # 静态文件放于此目录
  |-- pelicanconf.py        # 博客配置文件
  |-- publishconf.py        # 发布配置文件
  |-- Makefile              # 方便管理博客的 Makefile
  |-- develop_server.sh     # 用于开启测试服务器
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;编辑博客文章&lt;/h3&gt;
&lt;p&gt;在&lt;code&gt;content&lt;/code&gt;目录中新建一个&lt;code&gt;test.md&lt;/code&gt;文件，输入以下内容&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Title: Hello World
Date: 2015-01-11 10:30
Category: 分类1
Tags: 标签1,标签2

Hello World! 
这是我的第一篇文章
欢迎光临
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在博客项目文件夹中执行以下指令，生成全部静态页面文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
make html
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;本地开启一个测试服务器, 这会在本地&lt;code&gt;8000端口&lt;/code&gt;建立一个测试web服务器, 可以使用浏览器打开&lt;a href="http://localhost:8000/"&gt;&lt;code&gt;http://localhost:8000/&lt;/code&gt;&lt;/a&gt;来访问这个测试服务器, 然后就可以欣赏到你的博客了&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
./develop_server.sh start
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;提交到 Github&lt;/h3&gt;
&lt;p&gt;创建 Github 工程，工程名称必须为&lt;code&gt;username.github.com&lt;/code&gt;，其中&lt;code&gt;username&lt;/code&gt;是你在 Github 上注册的用户名，并将 Github 工程&lt;code&gt;clone&lt;/code&gt;到 Pelican 项目的&lt;code&gt;output&lt;/code&gt;文件夹中。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
git clone https://github.com/username/username.github.com.git ./output
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在&lt;code&gt;output&lt;/code&gt;目录中&lt;code&gt;commit&lt;/code&gt;全部文件到 Github&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd outout
git add --all
git commit -m &amp;#39;first commit&amp;#39;
git push
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;配置 Pelican 项目&lt;/h3&gt;
&lt;p&gt;Pelican 提供了一些主题和插件，用户可从 Github 克隆下来，然后根据需要自行选择&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
git clone git://github.com/getpelican/pelican-themes.git    # 主题
git clone git://github.com/getpelican/pelican-plugins.git   # 插件
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;</summary><category term="Python"></category><category term="Pelican"></category><category term="Github"></category></entry><entry><title>使用 Pelican + Github 搭建静态博客</title><link href="/posts/11.html" rel="alternate"></link><updated>2013-11-06T10:30:00+08:00</updated><author><name>Michael</name></author><id>tag:,2013-11-06:posts/11.html</id><summary type="html">&lt;h3&gt;介绍 Pelican&lt;/h3&gt;
&lt;p&gt;Pelican&lt;code&gt;[ˈpɛlɪkən]&lt;/code&gt; 是法语 Calepin&lt;code&gt;[kalp ɛ̃]&lt;/code&gt;变形词（&lt;code&gt;anagram&lt;/code&gt;），Calepin 是笔记本、备忘录的意思。&lt;/p&gt;
&lt;p&gt;框架选型上，我有以下考虑，经历各种 Google + Baidu 后，最终确定了 Pelican + Github 的方案。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;WordPress&lt;/code&gt;或&lt;code&gt;Discuz!&lt;/code&gt;都基于 PHP 语言开发，Pythoner 略微抵触&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Django&lt;/code&gt;框架虽然功能完善，但需要配置和管理的相应的数据库等组件，过于重量级&lt;/li&gt;
&lt;li&gt;技术宅都喜欢免费的午餐，不希望支付&lt;code&gt;VPS&lt;/code&gt;服务器的月租费用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;初始化 Pelican 项目&lt;/h3&gt;
&lt;p&gt;在 Python + Pip + Ubuntu 环境下，直接通过&lt;code&gt;pip install&lt;/code&gt;命令，即可安装 Pelican&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo pip install pelican    # 安装 Pelican 框架
sudo pip install markdown   # 安装 MarkDown 组件
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;创建博客文件夹，并执行初始化命令&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mkdir /path/to/your/blog
cd /path/to/your/blog
pelican-quickstart          # 生成 Pelican 项目文件框架
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;回答一系列问题过后，就能生成以下博客项目文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;/path/to/your/blog
  |-- content               # 全部文章放于此目录
  |-- output                # 静态文件放于此目录
  |-- pelicanconf.py        # 博客配置文件
  |-- publishconf.py        # 发布配置文件
  |-- Makefile              # 方便管理博客的 Makefile
  |-- develop_server.sh     # 用于开启测试服务器
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;编辑博客文章&lt;/h3&gt;
&lt;p&gt;在&lt;code&gt;content&lt;/code&gt;目录中新建一个&lt;code&gt;test.md&lt;/code&gt;文件，输入以下内容&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Title: Hello World
Date: 2015-01-11 10:30
Category: 分类1
Tags: 标签1,标签2

Hello World! 
这是我的第一篇文章
欢迎光临
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在博客项目文件夹中执行以下指令，生成全部静态页面文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
make html
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;本地开启一个测试服务器, 这会在本地&lt;code&gt;8000端口&lt;/code&gt;建立一个测试web服务器, 可以使用浏览器打开&lt;a href="http://localhost:8000/"&gt;&lt;code&gt;http://localhost:8000/&lt;/code&gt;&lt;/a&gt;来访问这个测试服务器, 然后就可以欣赏到你的博客了&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
./develop_server.sh start
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;提交到 Github&lt;/h3&gt;
&lt;p&gt;创建 Github 工程，工程名称必须为&lt;code&gt;username.github.com&lt;/code&gt;，其中&lt;code&gt;username&lt;/code&gt;是你在 Github 上注册的用户名，并将 Github 工程&lt;code&gt;clone&lt;/code&gt;到 Pelican 项目的&lt;code&gt;output&lt;/code&gt;文件夹中。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
git clone https://github.com/username/username.github.com.git ./output
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在&lt;code&gt;output&lt;/code&gt;目录中&lt;code&gt;commit&lt;/code&gt;全部文件到 Github&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd outout
git add --all
git commit -m &amp;#39;first commit&amp;#39;
git push
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;配置 Pelican 项目&lt;/h3&gt;
&lt;p&gt;Pelican 提供了一些主题和插件，用户可从 Github 克隆下来，然后根据需要自行选择&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
git clone git://github.com/getpelican/pelican-themes.git    # 主题
git clone git://github.com/getpelican/pelican-plugins.git   # 插件
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;</summary><category term="Python"></category><category term="Pelican"></category><category term="Github"></category></entry><entry><title>使用 Pelican + Github 搭建静态博客</title><link href="/posts/12.html" rel="alternate"></link><updated>2013-11-06T10:30:00+08:00</updated><author><name>Michael</name></author><id>tag:,2013-11-06:posts/12.html</id><summary type="html">&lt;h3&gt;介绍 Pelican&lt;/h3&gt;
&lt;p&gt;Pelican&lt;code&gt;[ˈpɛlɪkən]&lt;/code&gt; 是法语 Calepin&lt;code&gt;[kalp ɛ̃]&lt;/code&gt;变形词（&lt;code&gt;anagram&lt;/code&gt;），Calepin 是笔记本、备忘录的意思。&lt;/p&gt;
&lt;p&gt;框架选型上，我有以下考虑，经历各种 Google + Baidu 后，最终确定了 Pelican + Github 的方案。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;WordPress&lt;/code&gt;或&lt;code&gt;Discuz!&lt;/code&gt;都基于 PHP 语言开发，Pythoner 略微抵触&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Django&lt;/code&gt;框架虽然功能完善，但需要配置和管理的相应的数据库等组件，过于重量级&lt;/li&gt;
&lt;li&gt;技术宅都喜欢免费的午餐，不希望支付&lt;code&gt;VPS&lt;/code&gt;服务器的月租费用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;初始化 Pelican 项目&lt;/h3&gt;
&lt;p&gt;在 Python + Pip + Ubuntu 环境下，直接通过&lt;code&gt;pip install&lt;/code&gt;命令，即可安装 Pelican&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo pip install pelican    # 安装 Pelican 框架
sudo pip install markdown   # 安装 MarkDown 组件
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;创建博客文件夹，并执行初始化命令&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mkdir /path/to/your/blog
cd /path/to/your/blog
pelican-quickstart          # 生成 Pelican 项目文件框架
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;回答一系列问题过后，就能生成以下博客项目文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;/path/to/your/blog
  |-- content               # 全部文章放于此目录
  |-- output                # 静态文件放于此目录
  |-- pelicanconf.py        # 博客配置文件
  |-- publishconf.py        # 发布配置文件
  |-- Makefile              # 方便管理博客的 Makefile
  |-- develop_server.sh     # 用于开启测试服务器
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;编辑博客文章&lt;/h3&gt;
&lt;p&gt;在&lt;code&gt;content&lt;/code&gt;目录中新建一个&lt;code&gt;test.md&lt;/code&gt;文件，输入以下内容&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Title: Hello World
Date: 2015-01-11 10:30
Category: 分类1
Tags: 标签1,标签2

Hello World! 
这是我的第一篇文章
欢迎光临
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在博客项目文件夹中执行以下指令，生成全部静态页面文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
make html
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;本地开启一个测试服务器, 这会在本地&lt;code&gt;8000端口&lt;/code&gt;建立一个测试web服务器, 可以使用浏览器打开&lt;a href="http://localhost:8000/"&gt;&lt;code&gt;http://localhost:8000/&lt;/code&gt;&lt;/a&gt;来访问这个测试服务器, 然后就可以欣赏到你的博客了&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
./develop_server.sh start
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;提交到 Github&lt;/h3&gt;
&lt;p&gt;创建 Github 工程，工程名称必须为&lt;code&gt;username.github.com&lt;/code&gt;，其中&lt;code&gt;username&lt;/code&gt;是你在 Github 上注册的用户名，并将 Github 工程&lt;code&gt;clone&lt;/code&gt;到 Pelican 项目的&lt;code&gt;output&lt;/code&gt;文件夹中。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
git clone https://github.com/username/username.github.com.git ./output
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在&lt;code&gt;output&lt;/code&gt;目录中&lt;code&gt;commit&lt;/code&gt;全部文件到 Github&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd outout
git add --all
git commit -m &amp;#39;first commit&amp;#39;
git push
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;配置 Pelican 项目&lt;/h3&gt;
&lt;p&gt;Pelican 提供了一些主题和插件，用户可从 Github 克隆下来，然后根据需要自行选择&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
git clone git://github.com/getpelican/pelican-themes.git    # 主题
git clone git://github.com/getpelican/pelican-plugins.git   # 插件
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;</summary><category term="Python"></category><category term="Pelican"></category><category term="Github"></category></entry><entry><title>使用 Pelican + Github 搭建静态博客</title><link href="/posts/13.html" rel="alternate"></link><updated>2013-11-06T10:30:00+08:00</updated><author><name>Michael</name></author><id>tag:,2013-11-06:posts/13.html</id><summary type="html">&lt;h3&gt;介绍 Pelican&lt;/h3&gt;
&lt;p&gt;Pelican&lt;code&gt;[ˈpɛlɪkən]&lt;/code&gt; 是法语 Calepin&lt;code&gt;[kalp ɛ̃]&lt;/code&gt;变形词（&lt;code&gt;anagram&lt;/code&gt;），Calepin 是笔记本、备忘录的意思。&lt;/p&gt;
&lt;p&gt;框架选型上，我有以下考虑，经历各种 Google + Baidu 后，最终确定了 Pelican + Github 的方案。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;WordPress&lt;/code&gt;或&lt;code&gt;Discuz!&lt;/code&gt;都基于 PHP 语言开发，Pythoner 略微抵触&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Django&lt;/code&gt;框架虽然功能完善，但需要配置和管理的相应的数据库等组件，过于重量级&lt;/li&gt;
&lt;li&gt;技术宅都喜欢免费的午餐，不希望支付&lt;code&gt;VPS&lt;/code&gt;服务器的月租费用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;初始化 Pelican 项目&lt;/h3&gt;
&lt;p&gt;在 Python + Pip + Ubuntu 环境下，直接通过&lt;code&gt;pip install&lt;/code&gt;命令，即可安装 Pelican&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo pip install pelican    # 安装 Pelican 框架
sudo pip install markdown   # 安装 MarkDown 组件
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;创建博客文件夹，并执行初始化命令&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mkdir /path/to/your/blog
cd /path/to/your/blog
pelican-quickstart          # 生成 Pelican 项目文件框架
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;回答一系列问题过后，就能生成以下博客项目文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;/path/to/your/blog
  |-- content               # 全部文章放于此目录
  |-- output                # 静态文件放于此目录
  |-- pelicanconf.py        # 博客配置文件
  |-- publishconf.py        # 发布配置文件
  |-- Makefile              # 方便管理博客的 Makefile
  |-- develop_server.sh     # 用于开启测试服务器
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;编辑博客文章&lt;/h3&gt;
&lt;p&gt;在&lt;code&gt;content&lt;/code&gt;目录中新建一个&lt;code&gt;test.md&lt;/code&gt;文件，输入以下内容&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Title: Hello World
Date: 2015-01-11 10:30
Category: 分类1
Tags: 标签1,标签2

Hello World! 
这是我的第一篇文章
欢迎光临
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在博客项目文件夹中执行以下指令，生成全部静态页面文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
make html
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;本地开启一个测试服务器, 这会在本地&lt;code&gt;8000端口&lt;/code&gt;建立一个测试web服务器, 可以使用浏览器打开&lt;a href="http://localhost:8000/"&gt;&lt;code&gt;http://localhost:8000/&lt;/code&gt;&lt;/a&gt;来访问这个测试服务器, 然后就可以欣赏到你的博客了&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
./develop_server.sh start
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;提交到 Github&lt;/h3&gt;
&lt;p&gt;创建 Github 工程，工程名称必须为&lt;code&gt;username.github.com&lt;/code&gt;，其中&lt;code&gt;username&lt;/code&gt;是你在 Github 上注册的用户名，并将 Github 工程&lt;code&gt;clone&lt;/code&gt;到 Pelican 项目的&lt;code&gt;output&lt;/code&gt;文件夹中。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
git clone https://github.com/username/username.github.com.git ./output
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在&lt;code&gt;output&lt;/code&gt;目录中&lt;code&gt;commit&lt;/code&gt;全部文件到 Github&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd outout
git add --all
git commit -m &amp;#39;first commit&amp;#39;
git push
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;配置 Pelican 项目&lt;/h3&gt;
&lt;p&gt;Pelican 提供了一些主题和插件，用户可从 Github 克隆下来，然后根据需要自行选择&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
git clone git://github.com/getpelican/pelican-themes.git    # 主题
git clone git://github.com/getpelican/pelican-plugins.git   # 插件
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;</summary><category term="Python"></category><category term="Pelican"></category><category term="Github"></category></entry><entry><title>使用 Pelican + Github 搭建静态博客</title><link href="/posts/14.html" rel="alternate"></link><updated>2013-11-06T10:30:00+08:00</updated><author><name>Michael</name></author><id>tag:,2013-11-06:posts/14.html</id><summary type="html">&lt;h3&gt;介绍 Pelican&lt;/h3&gt;
&lt;p&gt;Pelican&lt;code&gt;[ˈpɛlɪkən]&lt;/code&gt; 是法语 Calepin&lt;code&gt;[kalp ɛ̃]&lt;/code&gt;变形词（&lt;code&gt;anagram&lt;/code&gt;），Calepin 是笔记本、备忘录的意思。&lt;/p&gt;
&lt;p&gt;框架选型上，我有以下考虑，经历各种 Google + Baidu 后，最终确定了 Pelican + Github 的方案。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;WordPress&lt;/code&gt;或&lt;code&gt;Discuz!&lt;/code&gt;都基于 PHP 语言开发，Pythoner 略微抵触&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Django&lt;/code&gt;框架虽然功能完善，但需要配置和管理的相应的数据库等组件，过于重量级&lt;/li&gt;
&lt;li&gt;技术宅都喜欢免费的午餐，不希望支付&lt;code&gt;VPS&lt;/code&gt;服务器的月租费用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;初始化 Pelican 项目&lt;/h3&gt;
&lt;p&gt;在 Python + Pip + Ubuntu 环境下，直接通过&lt;code&gt;pip install&lt;/code&gt;命令，即可安装 Pelican&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo pip install pelican    # 安装 Pelican 框架
sudo pip install markdown   # 安装 MarkDown 组件
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;创建博客文件夹，并执行初始化命令&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mkdir /path/to/your/blog
cd /path/to/your/blog
pelican-quickstart          # 生成 Pelican 项目文件框架
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;回答一系列问题过后，就能生成以下博客项目文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;/path/to/your/blog
  |-- content               # 全部文章放于此目录
  |-- output                # 静态文件放于此目录
  |-- pelicanconf.py        # 博客配置文件
  |-- publishconf.py        # 发布配置文件
  |-- Makefile              # 方便管理博客的 Makefile
  |-- develop_server.sh     # 用于开启测试服务器
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;编辑博客文章&lt;/h3&gt;
&lt;p&gt;在&lt;code&gt;content&lt;/code&gt;目录中新建一个&lt;code&gt;test.md&lt;/code&gt;文件，输入以下内容&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Title: Hello World
Date: 2015-01-11 10:30
Category: 分类1
Tags: 标签1,标签2

Hello World! 
这是我的第一篇文章
欢迎光临
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在博客项目文件夹中执行以下指令，生成全部静态页面文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
make html
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;本地开启一个测试服务器, 这会在本地&lt;code&gt;8000端口&lt;/code&gt;建立一个测试web服务器, 可以使用浏览器打开&lt;a href="http://localhost:8000/"&gt;&lt;code&gt;http://localhost:8000/&lt;/code&gt;&lt;/a&gt;来访问这个测试服务器, 然后就可以欣赏到你的博客了&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
./develop_server.sh start
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;提交到 Github&lt;/h3&gt;
&lt;p&gt;创建 Github 工程，工程名称必须为&lt;code&gt;username.github.com&lt;/code&gt;，其中&lt;code&gt;username&lt;/code&gt;是你在 Github 上注册的用户名，并将 Github 工程&lt;code&gt;clone&lt;/code&gt;到 Pelican 项目的&lt;code&gt;output&lt;/code&gt;文件夹中。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
git clone https://github.com/username/username.github.com.git ./output
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在&lt;code&gt;output&lt;/code&gt;目录中&lt;code&gt;commit&lt;/code&gt;全部文件到 Github&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd outout
git add --all
git commit -m &amp;#39;first commit&amp;#39;
git push
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;配置 Pelican 项目&lt;/h3&gt;
&lt;p&gt;Pelican 提供了一些主题和插件，用户可从 Github 克隆下来，然后根据需要自行选择&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
git clone git://github.com/getpelican/pelican-themes.git    # 主题
git clone git://github.com/getpelican/pelican-plugins.git   # 插件
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;</summary><category term="Python"></category><category term="Pelican"></category><category term="Github"></category></entry><entry><title>使用 Pelican + Github 搭建静态博客</title><link href="/posts/15.html" rel="alternate"></link><updated>2013-11-06T10:30:00+08:00</updated><author><name>Michael</name></author><id>tag:,2013-11-06:posts/15.html</id><summary type="html">&lt;h3&gt;介绍 Pelican&lt;/h3&gt;
&lt;p&gt;Pelican&lt;code&gt;[ˈpɛlɪkən]&lt;/code&gt; 是法语 Calepin&lt;code&gt;[kalp ɛ̃]&lt;/code&gt;变形词（&lt;code&gt;anagram&lt;/code&gt;），Calepin 是笔记本、备忘录的意思。&lt;/p&gt;
&lt;p&gt;框架选型上，我有以下考虑，经历各种 Google + Baidu 后，最终确定了 Pelican + Github 的方案。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;WordPress&lt;/code&gt;或&lt;code&gt;Discuz!&lt;/code&gt;都基于 PHP 语言开发，Pythoner 略微抵触&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Django&lt;/code&gt;框架虽然功能完善，但需要配置和管理的相应的数据库等组件，过于重量级&lt;/li&gt;
&lt;li&gt;技术宅都喜欢免费的午餐，不希望支付&lt;code&gt;VPS&lt;/code&gt;服务器的月租费用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;初始化 Pelican 项目&lt;/h3&gt;
&lt;p&gt;在 Python + Pip + Ubuntu 环境下，直接通过&lt;code&gt;pip install&lt;/code&gt;命令，即可安装 Pelican&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo pip install pelican    # 安装 Pelican 框架
sudo pip install markdown   # 安装 MarkDown 组件
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;创建博客文件夹，并执行初始化命令&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mkdir /path/to/your/blog
cd /path/to/your/blog
pelican-quickstart          # 生成 Pelican 项目文件框架
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;回答一系列问题过后，就能生成以下博客项目文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;/path/to/your/blog
  |-- content               # 全部文章放于此目录
  |-- output                # 静态文件放于此目录
  |-- pelicanconf.py        # 博客配置文件
  |-- publishconf.py        # 发布配置文件
  |-- Makefile              # 方便管理博客的 Makefile
  |-- develop_server.sh     # 用于开启测试服务器
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;编辑博客文章&lt;/h3&gt;
&lt;p&gt;在&lt;code&gt;content&lt;/code&gt;目录中新建一个&lt;code&gt;test.md&lt;/code&gt;文件，输入以下内容&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Title: Hello World
Date: 2015-01-11 10:30
Category: 分类1
Tags: 标签1,标签2

Hello World! 
这是我的第一篇文章
欢迎光临
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在博客项目文件夹中执行以下指令，生成全部静态页面文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
make html
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;本地开启一个测试服务器, 这会在本地&lt;code&gt;8000端口&lt;/code&gt;建立一个测试web服务器, 可以使用浏览器打开&lt;a href="http://localhost:8000/"&gt;&lt;code&gt;http://localhost:8000/&lt;/code&gt;&lt;/a&gt;来访问这个测试服务器, 然后就可以欣赏到你的博客了&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
./develop_server.sh start
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;提交到 Github&lt;/h3&gt;
&lt;p&gt;创建 Github 工程，工程名称必须为&lt;code&gt;username.github.com&lt;/code&gt;，其中&lt;code&gt;username&lt;/code&gt;是你在 Github 上注册的用户名，并将 Github 工程&lt;code&gt;clone&lt;/code&gt;到 Pelican 项目的&lt;code&gt;output&lt;/code&gt;文件夹中。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
git clone https://github.com/username/username.github.com.git ./output
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在&lt;code&gt;output&lt;/code&gt;目录中&lt;code&gt;commit&lt;/code&gt;全部文件到 Github&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd outout
git add --all
git commit -m &amp;#39;first commit&amp;#39;
git push
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;配置 Pelican 项目&lt;/h3&gt;
&lt;p&gt;Pelican 提供了一些主题和插件，用户可从 Github 克隆下来，然后根据需要自行选择&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
git clone git://github.com/getpelican/pelican-themes.git    # 主题
git clone git://github.com/getpelican/pelican-plugins.git   # 插件
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;</summary><category term="Python"></category><category term="Pelican"></category><category term="Github"></category></entry><entry><title>使用 Pelican + Github 搭建静态博客</title><link href="/posts/2.html" rel="alternate"></link><updated>2013-11-06T10:30:00+08:00</updated><author><name>Michael</name></author><id>tag:,2013-11-06:posts/2.html</id><summary type="html">&lt;h3&gt;介绍 Pelican&lt;/h3&gt;
&lt;p&gt;Pelican&lt;code&gt;[ˈpɛlɪkən]&lt;/code&gt; 是法语 Calepin&lt;code&gt;[kalp ɛ̃]&lt;/code&gt;变形词（&lt;code&gt;anagram&lt;/code&gt;），Calepin 是笔记本、备忘录的意思。&lt;/p&gt;
&lt;p&gt;框架选型上，我有以下考虑，经历各种 Google + Baidu 后，最终确定了 Pelican + Github 的方案。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;WordPress&lt;/code&gt;或&lt;code&gt;Discuz!&lt;/code&gt;都基于 PHP 语言开发，Pythoner 略微抵触&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Django&lt;/code&gt;框架虽然功能完善，但需要配置和管理的相应的数据库等组件，过于重量级&lt;/li&gt;
&lt;li&gt;技术宅都喜欢免费的午餐，不希望支付&lt;code&gt;VPS&lt;/code&gt;服务器的月租费用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;初始化 Pelican 项目&lt;/h3&gt;
&lt;p&gt;在 Python + Pip + Ubuntu 环境下，直接通过&lt;code&gt;pip install&lt;/code&gt;命令，即可安装 Pelican&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo pip install pelican    # 安装 Pelican 框架
sudo pip install markdown   # 安装 MarkDown 组件
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;创建博客文件夹，并执行初始化命令&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mkdir /path/to/your/blog
cd /path/to/your/blog
pelican-quickstart          # 生成 Pelican 项目文件框架
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;回答一系列问题过后，就能生成以下博客项目文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;/path/to/your/blog
  |-- content               # 全部文章放于此目录
  |-- output                # 静态文件放于此目录
  |-- pelicanconf.py        # 博客配置文件
  |-- publishconf.py        # 发布配置文件
  |-- Makefile              # 方便管理博客的 Makefile
  |-- develop_server.sh     # 用于开启测试服务器
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;编辑博客文章&lt;/h3&gt;
&lt;p&gt;在&lt;code&gt;content&lt;/code&gt;目录中新建一个&lt;code&gt;test.md&lt;/code&gt;文件，输入以下内容&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Title: Hello World
Date: 2015-01-11 10:30
Category: 分类1
Tags: 标签1,标签2

Hello World! 
这是我的第一篇文章
欢迎光临
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在博客项目文件夹中执行以下指令，生成全部静态页面文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
make html
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;本地开启一个测试服务器, 这会在本地&lt;code&gt;8000端口&lt;/code&gt;建立一个测试web服务器, 可以使用浏览器打开&lt;a href="http://localhost:8000/"&gt;&lt;code&gt;http://localhost:8000/&lt;/code&gt;&lt;/a&gt;来访问这个测试服务器, 然后就可以欣赏到你的博客了&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
./develop_server.sh start
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;提交到 Github&lt;/h3&gt;
&lt;p&gt;创建 Github 工程，工程名称必须为&lt;code&gt;username.github.com&lt;/code&gt;，其中&lt;code&gt;username&lt;/code&gt;是你在 Github 上注册的用户名，并将 Github 工程&lt;code&gt;clone&lt;/code&gt;到 Pelican 项目的&lt;code&gt;output&lt;/code&gt;文件夹中。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
git clone https://github.com/username/username.github.com.git ./output
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在&lt;code&gt;output&lt;/code&gt;目录中&lt;code&gt;commit&lt;/code&gt;全部文件到 Github&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd outout
git add --all
git commit -m &amp;#39;first commit&amp;#39;
git push
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;配置 Pelican 项目&lt;/h3&gt;
&lt;p&gt;Pelican 提供了一些主题和插件，用户可从 Github 克隆下来，然后根据需要自行选择&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
git clone git://github.com/getpelican/pelican-themes.git    # 主题
git clone git://github.com/getpelican/pelican-plugins.git   # 插件
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;</summary><category term="Python"></category><category term="Pelican"></category><category term="Github"></category></entry><entry><title>使用 Pelican + Github 搭建静态博客</title><link href="/posts/3.html" rel="alternate"></link><updated>2013-11-06T10:30:00+08:00</updated><author><name>Michael</name></author><id>tag:,2013-11-06:posts/3.html</id><summary type="html">&lt;h3&gt;介绍 Pelican&lt;/h3&gt;
&lt;p&gt;Pelican&lt;code&gt;[ˈpɛlɪkən]&lt;/code&gt; 是法语 Calepin&lt;code&gt;[kalp ɛ̃]&lt;/code&gt;变形词（&lt;code&gt;anagram&lt;/code&gt;），Calepin 是笔记本、备忘录的意思。&lt;/p&gt;
&lt;p&gt;框架选型上，我有以下考虑，经历各种 Google + Baidu 后，最终确定了 Pelican + Github 的方案。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;WordPress&lt;/code&gt;或&lt;code&gt;Discuz!&lt;/code&gt;都基于 PHP 语言开发，Pythoner 略微抵触&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Django&lt;/code&gt;框架虽然功能完善，但需要配置和管理的相应的数据库等组件，过于重量级&lt;/li&gt;
&lt;li&gt;技术宅都喜欢免费的午餐，不希望支付&lt;code&gt;VPS&lt;/code&gt;服务器的月租费用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;初始化 Pelican 项目&lt;/h3&gt;
&lt;p&gt;在 Python + Pip + Ubuntu 环境下，直接通过&lt;code&gt;pip install&lt;/code&gt;命令，即可安装 Pelican&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo pip install pelican    # 安装 Pelican 框架
sudo pip install markdown   # 安装 MarkDown 组件
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;创建博客文件夹，并执行初始化命令&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mkdir /path/to/your/blog
cd /path/to/your/blog
pelican-quickstart          # 生成 Pelican 项目文件框架
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;回答一系列问题过后，就能生成以下博客项目文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;/path/to/your/blog
  |-- content               # 全部文章放于此目录
  |-- output                # 静态文件放于此目录
  |-- pelicanconf.py        # 博客配置文件
  |-- publishconf.py        # 发布配置文件
  |-- Makefile              # 方便管理博客的 Makefile
  |-- develop_server.sh     # 用于开启测试服务器
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;编辑博客文章&lt;/h3&gt;
&lt;p&gt;在&lt;code&gt;content&lt;/code&gt;目录中新建一个&lt;code&gt;test.md&lt;/code&gt;文件，输入以下内容&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Title: Hello World
Date: 2015-01-11 10:30
Category: 分类1
Tags: 标签1,标签2

Hello World! 
这是我的第一篇文章
欢迎光临
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在博客项目文件夹中执行以下指令，生成全部静态页面文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
make html
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;本地开启一个测试服务器, 这会在本地&lt;code&gt;8000端口&lt;/code&gt;建立一个测试web服务器, 可以使用浏览器打开&lt;a href="http://localhost:8000/"&gt;&lt;code&gt;http://localhost:8000/&lt;/code&gt;&lt;/a&gt;来访问这个测试服务器, 然后就可以欣赏到你的博客了&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
./develop_server.sh start
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;提交到 Github&lt;/h3&gt;
&lt;p&gt;创建 Github 工程，工程名称必须为&lt;code&gt;username.github.com&lt;/code&gt;，其中&lt;code&gt;username&lt;/code&gt;是你在 Github 上注册的用户名，并将 Github 工程&lt;code&gt;clone&lt;/code&gt;到 Pelican 项目的&lt;code&gt;output&lt;/code&gt;文件夹中。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
git clone https://github.com/username/username.github.com.git ./output
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在&lt;code&gt;output&lt;/code&gt;目录中&lt;code&gt;commit&lt;/code&gt;全部文件到 Github&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd outout
git add --all
git commit -m &amp;#39;first commit&amp;#39;
git push
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;配置 Pelican 项目&lt;/h3&gt;
&lt;p&gt;Pelican 提供了一些主题和插件，用户可从 Github 克隆下来，然后根据需要自行选择&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
git clone git://github.com/getpelican/pelican-themes.git    # 主题
git clone git://github.com/getpelican/pelican-plugins.git   # 插件
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;</summary><category term="Python"></category><category term="Pelican"></category><category term="Github"></category></entry><entry><title>使用 Pelican + Github 搭建静态博客</title><link href="/posts/4.html" rel="alternate"></link><updated>2013-11-06T10:30:00+08:00</updated><author><name>Michael</name></author><id>tag:,2013-11-06:posts/4.html</id><summary type="html">&lt;h3&gt;介绍 Pelican&lt;/h3&gt;
&lt;p&gt;Pelican&lt;code&gt;[ˈpɛlɪkən]&lt;/code&gt; 是法语 Calepin&lt;code&gt;[kalp ɛ̃]&lt;/code&gt;变形词（&lt;code&gt;anagram&lt;/code&gt;），Calepin 是笔记本、备忘录的意思。&lt;/p&gt;
&lt;p&gt;框架选型上，我有以下考虑，经历各种 Google + Baidu 后，最终确定了 Pelican + Github 的方案。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;WordPress&lt;/code&gt;或&lt;code&gt;Discuz!&lt;/code&gt;都基于 PHP 语言开发，Pythoner 略微抵触&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Django&lt;/code&gt;框架虽然功能完善，但需要配置和管理的相应的数据库等组件，过于重量级&lt;/li&gt;
&lt;li&gt;技术宅都喜欢免费的午餐，不希望支付&lt;code&gt;VPS&lt;/code&gt;服务器的月租费用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;初始化 Pelican 项目&lt;/h3&gt;
&lt;p&gt;在 Python + Pip + Ubuntu 环境下，直接通过&lt;code&gt;pip install&lt;/code&gt;命令，即可安装 Pelican&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo pip install pelican    # 安装 Pelican 框架
sudo pip install markdown   # 安装 MarkDown 组件
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;创建博客文件夹，并执行初始化命令&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mkdir /path/to/your/blog
cd /path/to/your/blog
pelican-quickstart          # 生成 Pelican 项目文件框架
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;回答一系列问题过后，就能生成以下博客项目文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;/path/to/your/blog
  |-- content               # 全部文章放于此目录
  |-- output                # 静态文件放于此目录
  |-- pelicanconf.py        # 博客配置文件
  |-- publishconf.py        # 发布配置文件
  |-- Makefile              # 方便管理博客的 Makefile
  |-- develop_server.sh     # 用于开启测试服务器
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;编辑博客文章&lt;/h3&gt;
&lt;p&gt;在&lt;code&gt;content&lt;/code&gt;目录中新建一个&lt;code&gt;test.md&lt;/code&gt;文件，输入以下内容&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Title: Hello World
Date: 2015-01-11 10:30
Category: 分类1
Tags: 标签1,标签2

Hello World! 
这是我的第一篇文章
欢迎光临
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在博客项目文件夹中执行以下指令，生成全部静态页面文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
make html
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;本地开启一个测试服务器, 这会在本地&lt;code&gt;8000端口&lt;/code&gt;建立一个测试web服务器, 可以使用浏览器打开&lt;a href="http://localhost:8000/"&gt;&lt;code&gt;http://localhost:8000/&lt;/code&gt;&lt;/a&gt;来访问这个测试服务器, 然后就可以欣赏到你的博客了&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
./develop_server.sh start
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;提交到 Github&lt;/h3&gt;
&lt;p&gt;创建 Github 工程，工程名称必须为&lt;code&gt;username.github.com&lt;/code&gt;，其中&lt;code&gt;username&lt;/code&gt;是你在 Github 上注册的用户名，并将 Github 工程&lt;code&gt;clone&lt;/code&gt;到 Pelican 项目的&lt;code&gt;output&lt;/code&gt;文件夹中。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
git clone https://github.com/username/username.github.com.git ./output
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在&lt;code&gt;output&lt;/code&gt;目录中&lt;code&gt;commit&lt;/code&gt;全部文件到 Github&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd outout
git add --all
git commit -m &amp;#39;first commit&amp;#39;
git push
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;配置 Pelican 项目&lt;/h3&gt;
&lt;p&gt;Pelican 提供了一些主题和插件，用户可从 Github 克隆下来，然后根据需要自行选择&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
git clone git://github.com/getpelican/pelican-themes.git    # 主题
git clone git://github.com/getpelican/pelican-plugins.git   # 插件
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;</summary><category term="Python"></category><category term="Pelican"></category><category term="Github"></category></entry><entry><title>使用 Pelican + Github 搭建静态博客</title><link href="/posts/5.html" rel="alternate"></link><updated>2013-11-06T10:30:00+08:00</updated><author><name>Michael</name></author><id>tag:,2013-11-06:posts/5.html</id><summary type="html">&lt;h3&gt;介绍 Pelican&lt;/h3&gt;
&lt;p&gt;Pelican&lt;code&gt;[ˈpɛlɪkən]&lt;/code&gt; 是法语 Calepin&lt;code&gt;[kalp ɛ̃]&lt;/code&gt;变形词（&lt;code&gt;anagram&lt;/code&gt;），Calepin 是笔记本、备忘录的意思。&lt;/p&gt;
&lt;p&gt;框架选型上，我有以下考虑，经历各种 Google + Baidu 后，最终确定了 Pelican + Github 的方案。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;WordPress&lt;/code&gt;或&lt;code&gt;Discuz!&lt;/code&gt;都基于 PHP 语言开发，Pythoner 略微抵触&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Django&lt;/code&gt;框架虽然功能完善，但需要配置和管理的相应的数据库等组件，过于重量级&lt;/li&gt;
&lt;li&gt;技术宅都喜欢免费的午餐，不希望支付&lt;code&gt;VPS&lt;/code&gt;服务器的月租费用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;初始化 Pelican 项目&lt;/h3&gt;
&lt;p&gt;在 Python + Pip + Ubuntu 环境下，直接通过&lt;code&gt;pip install&lt;/code&gt;命令，即可安装 Pelican&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo pip install pelican    # 安装 Pelican 框架
sudo pip install markdown   # 安装 MarkDown 组件
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;创建博客文件夹，并执行初始化命令&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mkdir /path/to/your/blog
cd /path/to/your/blog
pelican-quickstart          # 生成 Pelican 项目文件框架
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;回答一系列问题过后，就能生成以下博客项目文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;/path/to/your/blog
  |-- content               # 全部文章放于此目录
  |-- output                # 静态文件放于此目录
  |-- pelicanconf.py        # 博客配置文件
  |-- publishconf.py        # 发布配置文件
  |-- Makefile              # 方便管理博客的 Makefile
  |-- develop_server.sh     # 用于开启测试服务器
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;编辑博客文章&lt;/h3&gt;
&lt;p&gt;在&lt;code&gt;content&lt;/code&gt;目录中新建一个&lt;code&gt;test.md&lt;/code&gt;文件，输入以下内容&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Title: Hello World
Date: 2015-01-11 10:30
Category: 分类1
Tags: 标签1,标签2

Hello World! 
这是我的第一篇文章
欢迎光临
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在博客项目文件夹中执行以下指令，生成全部静态页面文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
make html
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;本地开启一个测试服务器, 这会在本地&lt;code&gt;8000端口&lt;/code&gt;建立一个测试web服务器, 可以使用浏览器打开&lt;a href="http://localhost:8000/"&gt;&lt;code&gt;http://localhost:8000/&lt;/code&gt;&lt;/a&gt;来访问这个测试服务器, 然后就可以欣赏到你的博客了&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
./develop_server.sh start
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;提交到 Github&lt;/h3&gt;
&lt;p&gt;创建 Github 工程，工程名称必须为&lt;code&gt;username.github.com&lt;/code&gt;，其中&lt;code&gt;username&lt;/code&gt;是你在 Github 上注册的用户名，并将 Github 工程&lt;code&gt;clone&lt;/code&gt;到 Pelican 项目的&lt;code&gt;output&lt;/code&gt;文件夹中。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
git clone https://github.com/username/username.github.com.git ./output
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在&lt;code&gt;output&lt;/code&gt;目录中&lt;code&gt;commit&lt;/code&gt;全部文件到 Github&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd outout
git add --all
git commit -m &amp;#39;first commit&amp;#39;
git push
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;配置 Pelican 项目&lt;/h3&gt;
&lt;p&gt;Pelican 提供了一些主题和插件，用户可从 Github 克隆下来，然后根据需要自行选择&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
git clone git://github.com/getpelican/pelican-themes.git    # 主题
git clone git://github.com/getpelican/pelican-plugins.git   # 插件
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;</summary><category term="Python"></category><category term="Pelican"></category><category term="Github"></category></entry><entry><title>使用 Pelican + Github 搭建静态博客</title><link href="/posts/6.html" rel="alternate"></link><updated>2013-11-06T10:30:00+08:00</updated><author><name>Michael</name></author><id>tag:,2013-11-06:posts/6.html</id><summary type="html">&lt;h3&gt;介绍 Pelican&lt;/h3&gt;
&lt;p&gt;Pelican&lt;code&gt;[ˈpɛlɪkən]&lt;/code&gt; 是法语 Calepin&lt;code&gt;[kalp ɛ̃]&lt;/code&gt;变形词（&lt;code&gt;anagram&lt;/code&gt;），Calepin 是笔记本、备忘录的意思。&lt;/p&gt;
&lt;p&gt;框架选型上，我有以下考虑，经历各种 Google + Baidu 后，最终确定了 Pelican + Github 的方案。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;WordPress&lt;/code&gt;或&lt;code&gt;Discuz!&lt;/code&gt;都基于 PHP 语言开发，Pythoner 略微抵触&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Django&lt;/code&gt;框架虽然功能完善，但需要配置和管理的相应的数据库等组件，过于重量级&lt;/li&gt;
&lt;li&gt;技术宅都喜欢免费的午餐，不希望支付&lt;code&gt;VPS&lt;/code&gt;服务器的月租费用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;初始化 Pelican 项目&lt;/h3&gt;
&lt;p&gt;在 Python + Pip + Ubuntu 环境下，直接通过&lt;code&gt;pip install&lt;/code&gt;命令，即可安装 Pelican&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo pip install pelican    # 安装 Pelican 框架
sudo pip install markdown   # 安装 MarkDown 组件
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;创建博客文件夹，并执行初始化命令&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mkdir /path/to/your/blog
cd /path/to/your/blog
pelican-quickstart          # 生成 Pelican 项目文件框架
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;回答一系列问题过后，就能生成以下博客项目文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;/path/to/your/blog
  |-- content               # 全部文章放于此目录
  |-- output                # 静态文件放于此目录
  |-- pelicanconf.py        # 博客配置文件
  |-- publishconf.py        # 发布配置文件
  |-- Makefile              # 方便管理博客的 Makefile
  |-- develop_server.sh     # 用于开启测试服务器
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;编辑博客文章&lt;/h3&gt;
&lt;p&gt;在&lt;code&gt;content&lt;/code&gt;目录中新建一个&lt;code&gt;test.md&lt;/code&gt;文件，输入以下内容&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Title: Hello World
Date: 2015-01-11 10:30
Category: 分类1
Tags: 标签1,标签2

Hello World! 
这是我的第一篇文章
欢迎光临
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在博客项目文件夹中执行以下指令，生成全部静态页面文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
make html
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;本地开启一个测试服务器, 这会在本地&lt;code&gt;8000端口&lt;/code&gt;建立一个测试web服务器, 可以使用浏览器打开&lt;a href="http://localhost:8000/"&gt;&lt;code&gt;http://localhost:8000/&lt;/code&gt;&lt;/a&gt;来访问这个测试服务器, 然后就可以欣赏到你的博客了&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
./develop_server.sh start
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;提交到 Github&lt;/h3&gt;
&lt;p&gt;创建 Github 工程，工程名称必须为&lt;code&gt;username.github.com&lt;/code&gt;，其中&lt;code&gt;username&lt;/code&gt;是你在 Github 上注册的用户名，并将 Github 工程&lt;code&gt;clone&lt;/code&gt;到 Pelican 项目的&lt;code&gt;output&lt;/code&gt;文件夹中。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
git clone https://github.com/username/username.github.com.git ./output
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在&lt;code&gt;output&lt;/code&gt;目录中&lt;code&gt;commit&lt;/code&gt;全部文件到 Github&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd outout
git add --all
git commit -m &amp;#39;first commit&amp;#39;
git push
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;配置 Pelican 项目&lt;/h3&gt;
&lt;p&gt;Pelican 提供了一些主题和插件，用户可从 Github 克隆下来，然后根据需要自行选择&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
git clone git://github.com/getpelican/pelican-themes.git    # 主题
git clone git://github.com/getpelican/pelican-plugins.git   # 插件
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;</summary><category term="Python"></category><category term="Pelican"></category><category term="Github"></category></entry><entry><title>使用 Pelican + Github 搭建静态博客</title><link href="/posts/7.html" rel="alternate"></link><updated>2013-11-06T10:30:00+08:00</updated><author><name>Michael</name></author><id>tag:,2013-11-06:posts/7.html</id><summary type="html">&lt;h3&gt;介绍 Pelican&lt;/h3&gt;
&lt;p&gt;Pelican&lt;code&gt;[ˈpɛlɪkən]&lt;/code&gt; 是法语 Calepin&lt;code&gt;[kalp ɛ̃]&lt;/code&gt;变形词（&lt;code&gt;anagram&lt;/code&gt;），Calepin 是笔记本、备忘录的意思。&lt;/p&gt;
&lt;p&gt;框架选型上，我有以下考虑，经历各种 Google + Baidu 后，最终确定了 Pelican + Github 的方案。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;WordPress&lt;/code&gt;或&lt;code&gt;Discuz!&lt;/code&gt;都基于 PHP 语言开发，Pythoner 略微抵触&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Django&lt;/code&gt;框架虽然功能完善，但需要配置和管理的相应的数据库等组件，过于重量级&lt;/li&gt;
&lt;li&gt;技术宅都喜欢免费的午餐，不希望支付&lt;code&gt;VPS&lt;/code&gt;服务器的月租费用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;初始化 Pelican 项目&lt;/h3&gt;
&lt;p&gt;在 Python + Pip + Ubuntu 环境下，直接通过&lt;code&gt;pip install&lt;/code&gt;命令，即可安装 Pelican&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo pip install pelican    # 安装 Pelican 框架
sudo pip install markdown   # 安装 MarkDown 组件
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;创建博客文件夹，并执行初始化命令&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mkdir /path/to/your/blog
cd /path/to/your/blog
pelican-quickstart          # 生成 Pelican 项目文件框架
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;回答一系列问题过后，就能生成以下博客项目文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;/path/to/your/blog
  |-- content               # 全部文章放于此目录
  |-- output                # 静态文件放于此目录
  |-- pelicanconf.py        # 博客配置文件
  |-- publishconf.py        # 发布配置文件
  |-- Makefile              # 方便管理博客的 Makefile
  |-- develop_server.sh     # 用于开启测试服务器
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;编辑博客文章&lt;/h3&gt;
&lt;p&gt;在&lt;code&gt;content&lt;/code&gt;目录中新建一个&lt;code&gt;test.md&lt;/code&gt;文件，输入以下内容&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Title: Hello World
Date: 2015-01-11 10:30
Category: 分类1
Tags: 标签1,标签2

Hello World! 
这是我的第一篇文章
欢迎光临
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在博客项目文件夹中执行以下指令，生成全部静态页面文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
make html
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;本地开启一个测试服务器, 这会在本地&lt;code&gt;8000端口&lt;/code&gt;建立一个测试web服务器, 可以使用浏览器打开&lt;a href="http://localhost:8000/"&gt;&lt;code&gt;http://localhost:8000/&lt;/code&gt;&lt;/a&gt;来访问这个测试服务器, 然后就可以欣赏到你的博客了&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
./develop_server.sh start
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;提交到 Github&lt;/h3&gt;
&lt;p&gt;创建 Github 工程，工程名称必须为&lt;code&gt;username.github.com&lt;/code&gt;，其中&lt;code&gt;username&lt;/code&gt;是你在 Github 上注册的用户名，并将 Github 工程&lt;code&gt;clone&lt;/code&gt;到 Pelican 项目的&lt;code&gt;output&lt;/code&gt;文件夹中。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
git clone https://github.com/username/username.github.com.git ./output
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在&lt;code&gt;output&lt;/code&gt;目录中&lt;code&gt;commit&lt;/code&gt;全部文件到 Github&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd outout
git add --all
git commit -m &amp;#39;first commit&amp;#39;
git push
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;配置 Pelican 项目&lt;/h3&gt;
&lt;p&gt;Pelican 提供了一些主题和插件，用户可从 Github 克隆下来，然后根据需要自行选择&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
git clone git://github.com/getpelican/pelican-themes.git    # 主题
git clone git://github.com/getpelican/pelican-plugins.git   # 插件
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;</summary><category term="Python"></category><category term="Pelican"></category><category term="Github"></category></entry><entry><title>使用 Pelican + Github 搭建静态博客</title><link href="/posts/8.html" rel="alternate"></link><updated>2013-11-06T10:30:00+08:00</updated><author><name>Michael</name></author><id>tag:,2013-11-06:posts/8.html</id><summary type="html">&lt;h3&gt;介绍 Pelican&lt;/h3&gt;
&lt;p&gt;Pelican&lt;code&gt;[ˈpɛlɪkən]&lt;/code&gt; 是法语 Calepin&lt;code&gt;[kalp ɛ̃]&lt;/code&gt;变形词（&lt;code&gt;anagram&lt;/code&gt;），Calepin 是笔记本、备忘录的意思。&lt;/p&gt;
&lt;p&gt;框架选型上，我有以下考虑，经历各种 Google + Baidu 后，最终确定了 Pelican + Github 的方案。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;WordPress&lt;/code&gt;或&lt;code&gt;Discuz!&lt;/code&gt;都基于 PHP 语言开发，Pythoner 略微抵触&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Django&lt;/code&gt;框架虽然功能完善，但需要配置和管理的相应的数据库等组件，过于重量级&lt;/li&gt;
&lt;li&gt;技术宅都喜欢免费的午餐，不希望支付&lt;code&gt;VPS&lt;/code&gt;服务器的月租费用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;初始化 Pelican 项目&lt;/h3&gt;
&lt;p&gt;在 Python + Pip + Ubuntu 环境下，直接通过&lt;code&gt;pip install&lt;/code&gt;命令，即可安装 Pelican&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo pip install pelican    # 安装 Pelican 框架
sudo pip install markdown   # 安装 MarkDown 组件
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;创建博客文件夹，并执行初始化命令&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mkdir /path/to/your/blog
cd /path/to/your/blog
pelican-quickstart          # 生成 Pelican 项目文件框架
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;回答一系列问题过后，就能生成以下博客项目文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;/path/to/your/blog
  |-- content               # 全部文章放于此目录
  |-- output                # 静态文件放于此目录
  |-- pelicanconf.py        # 博客配置文件
  |-- publishconf.py        # 发布配置文件
  |-- Makefile              # 方便管理博客的 Makefile
  |-- develop_server.sh     # 用于开启测试服务器
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;编辑博客文章&lt;/h3&gt;
&lt;p&gt;在&lt;code&gt;content&lt;/code&gt;目录中新建一个&lt;code&gt;test.md&lt;/code&gt;文件，输入以下内容&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Title: Hello World
Date: 2015-01-11 10:30
Category: 分类1
Tags: 标签1,标签2

Hello World! 
这是我的第一篇文章
欢迎光临
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在博客项目文件夹中执行以下指令，生成全部静态页面文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
make html
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;本地开启一个测试服务器, 这会在本地&lt;code&gt;8000端口&lt;/code&gt;建立一个测试web服务器, 可以使用浏览器打开&lt;a href="http://localhost:8000/"&gt;&lt;code&gt;http://localhost:8000/&lt;/code&gt;&lt;/a&gt;来访问这个测试服务器, 然后就可以欣赏到你的博客了&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
./develop_server.sh start
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;提交到 Github&lt;/h3&gt;
&lt;p&gt;创建 Github 工程，工程名称必须为&lt;code&gt;username.github.com&lt;/code&gt;，其中&lt;code&gt;username&lt;/code&gt;是你在 Github 上注册的用户名，并将 Github 工程&lt;code&gt;clone&lt;/code&gt;到 Pelican 项目的&lt;code&gt;output&lt;/code&gt;文件夹中。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
git clone https://github.com/username/username.github.com.git ./output
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在&lt;code&gt;output&lt;/code&gt;目录中&lt;code&gt;commit&lt;/code&gt;全部文件到 Github&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd outout
git add --all
git commit -m &amp;#39;first commit&amp;#39;
git push
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;配置 Pelican 项目&lt;/h3&gt;
&lt;p&gt;Pelican 提供了一些主题和插件，用户可从 Github 克隆下来，然后根据需要自行选择&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
git clone git://github.com/getpelican/pelican-themes.git    # 主题
git clone git://github.com/getpelican/pelican-plugins.git   # 插件
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;</summary><category term="Python"></category><category term="Pelican"></category><category term="Github"></category></entry><entry><title>使用 Pelican + Github 搭建静态博客</title><link href="/posts/9.html" rel="alternate"></link><updated>2013-11-06T10:30:00+08:00</updated><author><name>Michael</name></author><id>tag:,2013-11-06:posts/9.html</id><summary type="html">&lt;h3&gt;介绍 Pelican&lt;/h3&gt;
&lt;p&gt;Pelican&lt;code&gt;[ˈpɛlɪkən]&lt;/code&gt; 是法语 Calepin&lt;code&gt;[kalp ɛ̃]&lt;/code&gt;变形词（&lt;code&gt;anagram&lt;/code&gt;），Calepin 是笔记本、备忘录的意思。&lt;/p&gt;
&lt;p&gt;框架选型上，我有以下考虑，经历各种 Google + Baidu 后，最终确定了 Pelican + Github 的方案。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;WordPress&lt;/code&gt;或&lt;code&gt;Discuz!&lt;/code&gt;都基于 PHP 语言开发，Pythoner 略微抵触&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Django&lt;/code&gt;框架虽然功能完善，但需要配置和管理的相应的数据库等组件，过于重量级&lt;/li&gt;
&lt;li&gt;技术宅都喜欢免费的午餐，不希望支付&lt;code&gt;VPS&lt;/code&gt;服务器的月租费用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;初始化 Pelican 项目&lt;/h3&gt;
&lt;p&gt;在 Python + Pip + Ubuntu 环境下，直接通过&lt;code&gt;pip install&lt;/code&gt;命令，即可安装 Pelican&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo pip install pelican    # 安装 Pelican 框架
sudo pip install markdown   # 安装 MarkDown 组件
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;创建博客文件夹，并执行初始化命令&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mkdir /path/to/your/blog
cd /path/to/your/blog
pelican-quickstart          # 生成 Pelican 项目文件框架
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;回答一系列问题过后，就能生成以下博客项目文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;/path/to/your/blog
  |-- content               # 全部文章放于此目录
  |-- output                # 静态文件放于此目录
  |-- pelicanconf.py        # 博客配置文件
  |-- publishconf.py        # 发布配置文件
  |-- Makefile              # 方便管理博客的 Makefile
  |-- develop_server.sh     # 用于开启测试服务器
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;编辑博客文章&lt;/h3&gt;
&lt;p&gt;在&lt;code&gt;content&lt;/code&gt;目录中新建一个&lt;code&gt;test.md&lt;/code&gt;文件，输入以下内容&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Title: Hello World
Date: 2015-01-11 10:30
Category: 分类1
Tags: 标签1,标签2

Hello World! 
这是我的第一篇文章
欢迎光临
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在博客项目文件夹中执行以下指令，生成全部静态页面文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
make html
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;本地开启一个测试服务器, 这会在本地&lt;code&gt;8000端口&lt;/code&gt;建立一个测试web服务器, 可以使用浏览器打开&lt;a href="http://localhost:8000/"&gt;&lt;code&gt;http://localhost:8000/&lt;/code&gt;&lt;/a&gt;来访问这个测试服务器, 然后就可以欣赏到你的博客了&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
./develop_server.sh start
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;提交到 Github&lt;/h3&gt;
&lt;p&gt;创建 Github 工程，工程名称必须为&lt;code&gt;username.github.com&lt;/code&gt;，其中&lt;code&gt;username&lt;/code&gt;是你在 Github 上注册的用户名，并将 Github 工程&lt;code&gt;clone&lt;/code&gt;到 Pelican 项目的&lt;code&gt;output&lt;/code&gt;文件夹中。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
git clone https://github.com/username/username.github.com.git ./output
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在&lt;code&gt;output&lt;/code&gt;目录中&lt;code&gt;commit&lt;/code&gt;全部文件到 Github&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd outout
git add --all
git commit -m &amp;#39;first commit&amp;#39;
git push
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;配置 Pelican 项目&lt;/h3&gt;
&lt;p&gt;Pelican 提供了一些主题和插件，用户可从 Github 克隆下来，然后根据需要自行选择&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /path/to/your/blog
git clone git://github.com/getpelican/pelican-themes.git    # 主题
git clone git://github.com/getpelican/pelican-plugins.git   # 插件
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;</summary><category term="Python"></category><category term="Pelican"></category><category term="Github"></category></entry></feed>